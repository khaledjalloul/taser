{
    // Build the image using `docker compose build wheeled-humanoid-<target>`
    // "image": "khaledjalloul/wheeled-humanoid:ros-jazzy",
    "image": "khaledjalloul/wheeled-humanoid:isaaclab-ros-humble",
    "postCreateCommand": "bash .devcontainer/post_create.bash",
    "customizations": {
        "vscode": {
            "extensions": [
                // Python
                "ms-python.python",
                "ms-python.autopep8",
                "ms-python.vscode-pylance",
                // C++
                "ms-vscode.cpptools",
                "ms-vscode.cpptools-extension-pack",
                "kylinideteam.cmake-intellisence",
                "xaver.clang-format",
                // Docker
                "ms-azuretools.vscode-docker",
                // Misc
                "redhat.vscode-yaml",
                "redhat.vscode-xml",
                "yzhang.markdown-all-in-one",
                "foxundermoon.shell-format",
                // GitLens
                "eamodio.gitlens",
                // ROS
                "morningfrog.urdf-visualizer"
            ],
            "settings": {
                "python.defaultInterpreterPath": "/home/wheeled-humanoid/venv/bin/python",
                "python.analysis.typeCheckingMode": "off",
                "C_Cpp.default.includePath": [
                    "${workspaceFolder}/**",
                    "/opt/ros/jazzy/include/**",
                    "/opt/ros/humble/include/**"
                ],
                "gitlens.codeLens.authors.enabled": false,
                "gitlens.codeLens.recentChange.enabled": false
            }
        }
    },
    "workspaceMount": "source=${localWorkspaceFolder},target=/home/wheeled-humanoid/colcon_ws,type=bind",
    "workspaceFolder": "/home/wheeled-humanoid/colcon_ws",
    "mounts": [
        // Enable GUI
        "source=/tmp/.X11-unix,target=/tmp/.X11-unix,type=bind,consistency=cached",
        // Enable Docker-in-Docker
        "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind"
        // Enable Isaac Sim cache persistence
        // "source=wheeled_humanoid-devcontainer-isaac-cache-kit,target=/isaac-sim/kit/cache,type=volume",
        // "source=wheeled_humanoid-devcontainer-isaac-cache-ov,target=/root/.cache/ov,type=volume",
        // "source=wheeled_humanoid-devcontainer-isaac-cache-pip,target=/root/.cache/pip,type=volume",
        // "source=wheeled_humanoid-devcontainer-isaac-cache-gl,target=/root/.cache/nvidia/GLCache,type=volume",
        // "source=wheeled_humanoid-devcontainer-isaac-cache-compute,target=/root/.nv/ComputeCache,type=volume"
    ],
    "runArgs": [
        "--device=/dev/dri",
        "--hostname=dev",
        "--env-file=.env.local"
    ],
    "containerEnv": {
        // Enable GUI
        "DISPLAY": "${env:DISPLAY}"
    }
}